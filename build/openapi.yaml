openapi: 3.0.0
info:
  version: 1.0.0
  title: Sample API
  description: ワークフロー画面のバックエンドのAPI群。モックとしても使用する。
servers:
  - url: 'http://localhost:8080'
    description: ローカル環境
  - url: 'https://wf-rest.herokuapp.com'
    description: デモ環境
paths:
  /users:
    get:
      tags:
        - users
      summary: ユーザ一覧取得
      description: ユーザの一覧を返す
      operationId: findUsers
      parameters:
        - name: conditions
          in: query
          description: フィルタ条件
          required: false
          style: form
          schema:
            type: array
            items:
              type: string
        - name: limit
          in: query
          description: 一覧の最大件数
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: ユーザモデルのJSON形式の配列
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
                example:
                  - id: 1
                    userId: test01
                    name: テスト太郎
                    bornDate: '1990-04-12'
                    postNumber: '1620844'
                    address1: 東京都
                    address2: 新宿区
                    address3: 市谷八幡町XX-XX-XXX
                    address4: テストマンション901
                    email: 12345@abc.co.jp
                    activeFlag: true
                    memo: メモメモメモメモメモメモメモメモメモメモメモメモメモメモ
                  - id: 2
                    userId: sample01
                    name: サンプル太郎
                    bornDate: '1965-03-25'
                    postNumber: '1690075'
                    address1: 東京都
                    address2: 新宿区
                    address3: 高田馬場XX-XX-XXX
                    address4: サンプルマンション101
                    email: sample@abc.co.jp
                    activeFlag: true
                    memo: メモメモメモメモメモメモメモメモメモメモメモメモメモメモ
                  - id: 3
                    userId: user01
                    name: テストユーザ０１
                    bornDate: '1975-02-22'
                    postNumber: '1160013'
                    address1: 東京都
                    address2: 荒川区
                    address3: 西日暮里XX-XX-XXX
                    address4: テストマンション999
                    email: test@abc.co.jp
                    activeFlag: true
                    memo: メモメモメモメモメモメモメモメモメモメモメモメモメモメモ
                  - id: 4
                    userId: user02
                    name: テストユーザ０２
                    bornDate: '1975-02-23'
                    postNumber: '1160013'
                    address1: 東京都
                    address2: 荒川区
                    address3: 西日暮里XX-XX-XXX
                    address4: テストマンション999
                    email: test@abc.co.jp
                    activeFlag: false
                    memo: メモメモメモメモメモメモメモメモメモメモメモメモメモメモ
                  - id: 5
                    userId: user03
                    name: テストユーザ０３
                    bornDate: '1975-02-22'
                    postNumber: '1160013'
                    address1: 東京都
                    address2: 荒川区
                    address3: 西日暮里XX-XX-XXX
                    address4: テストマンション999
                    email: test@abc.co.jp
                    activeFlag: true
                    memo: メモメモメモメモメモメモメモメモメモメモメモメモメモメモ
                  - id: 6
                    userId: user04
                    name: テストユーザ０４
                    bornDate: '1975-02-22'
                    postNumber: '1160013'
                    address1: 東京都
                    address2: 荒川区
                    address3: 西日暮里XX-XX-XXX
                    address4: テストマンション999
                    email: test@abc.co.jp
                    activeFlag: true
                    memo: メモメモメモメモメモメモメモメモメモメモメモメモメモメモ
                  - id: 7
                    userId: user05
                    name: テストユーザ０５
                    bornDate: '1975-02-22'
                    postNumber: '1160013'
                    address1: 東京都
                    address2: 荒川区
                    address3: 西日暮里XX-XX-XXX
                    address4: テストマンション999
                    email: test@abc.co.jp
                    activeFlag: true
                    memo: メモメモメモメモメモメモメモメモメモメモメモメモメモメモ
                  - id: 8
                    userId: user06
                    name: テストユーザ０６
                    bornDate: '1975-02-22'
                    postNumber: '1160013'
                    address1: 東京都
                    address2: 荒川区
                    address3: 西日暮里XX-XX-XXX
                    address4: テストマンション999
                    email: test@abc.co.jp
                    activeFlag: true
                    memo: メモメモメモメモメモメモメモメモメモメモメモメモメモメモ
                  - id: 9
                    userId: user07
                    name: テストユーザ０７
                    bornDate: '1975-02-22'
                    postNumber: '1160013'
                    address1: 東京都
                    address2: 荒川区
                    address3: 西日暮里XX-XX-XXX
                    address4: テストマンション999
                    email: test@abc.co.jp
                    activeFlag: true
                    memo: メモメモメモメモメモメモメモメモメモメモメモメモメモメモ
                  - id: 10
                    userId: user08
                    name: テストユーザ０８
                    bornDate: '1975-02-22'
                    postNumber: '1160013'
                    address1: 東京都
                    address2: 荒川区
                    address3: 西日暮里XX-XX-XXX
                    address4: テストマンション999
                    email: test@abc.co.jp
                    activeFlag: true
                    memo: メモメモメモメモメモメモメモメモメモメモメモメモメモメモ
                  - id: 11
                    userId: user09
                    name: テストユーザ０９
                    bornDate: '1975-02-22'
                    postNumber: '1160013'
                    address1: 東京都
                    address2: 荒川区
                    address3: 西日暮里XX-XX-XXX
                    address4: テストマンション999
                    email: test@abc.co.jp
                    activeFlag: true
                    memo: メモメモメモメモメモメモメモメモメモメモメモメモメモメモ
                  - id: 12
                    userId: user10
                    name: テストユーザ１０
                    bornDate: '1975-02-22'
                    postNumber: '1160013'
                    address1: 東京都
                    address2: 荒川区
                    address3: 西日暮里XX-XX-XXX
                    address4: テストマンション999
                    email: test@abc.co.jp
                    activeFlag: true
                    memo: メモメモメモメモメモメモメモメモメモメモメモメモメモメモ
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - users
      summary: ユーザ新規作成
      operationId: createUser
      description: ユーザの新規作成
      parameters: []
      requestBody:
        description: ユーザを作成する
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: CREATED
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  '/users/{userId}':
    get:
      tags:
        - users
      summary: ユーザ情報取得
      operationId: getUser
      parameters:
        - $ref: '#/components/parameters/UserId'
      responses:
        '200':
          description: ユーザ一件の情報
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    patch:
      tags:
        - users
      summary: ユーザ情報更新
      operationId: updateUser
      parameters:
        - $ref: '#/components/parameters/UserId'
      requestBody:
        description: ユーザ更新データ
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: UPDATED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - users
      summary: ユーザ削除
      operationId: deleteUser
      parameters:
        - $ref: '#/components/parameters/UserId'
      responses:
        '204':
          description: DELETED
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  parameters:
    UserId:
      name: userId
      in: path
      description: ユーザID
      required: true
      schema:
        type: string
  schemas:
    User:
      description: ユーザ
      type: object
      required:
        - id
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
          example: 99
        userId:
          type: string
          example: sample999
        name:
          type: string
          example: サンプルユーザ999
        bornDate:
          type: string
          format: date
          example: '1985-01-01'
        postNumber:
          type: string
          example: '2720025'
        address1:
          type: string
          example: 千葉県
        address2:
          type: string
          example: 市川市
        address3:
          type: string
          example: 大和田99-999-999
        address4:
          type: string
          example: サンプルマンション101
        email:
          type: string
          format: email
          example: abcd@abc.co.jp
        activeFlag:
          type: boolean
          example: true
          description: システムを利用の有効/無効フラグ
        memo:
          type: string
          example: |
            テスト用のユーザです。
            メモメモです。
    Error:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
